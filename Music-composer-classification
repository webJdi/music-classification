{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":12490051,"sourceType":"datasetVersion","datasetId":7881824}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Music Composer Classification using Neural Network","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"markdown","source":"# Team members:\n1. Suman Senapati\n2. Navyesh\n3. Shruti A K","metadata":{}},{"cell_type":"markdown","source":"## Additional Libraries","metadata":{}},{"cell_type":"code","source":"!pip install tensorflow music21","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:02:54.462383Z","iopub.execute_input":"2025-07-19T18:02:54.462971Z","iopub.status.idle":"2025-07-19T18:02:58.371658Z","shell.execute_reply.started":"2025-07-19T18:02:54.462933Z","shell.execute_reply":"2025-07-19T18:02:58.370729Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: tensorflow in /usr/local/lib/python3.11/dist-packages (2.18.0)\nRequirement already satisfied: music21 in /usr/local/lib/python3.11/dist-packages (9.3.0)\nRequirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.4.0)\nRequirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.6.3)\nRequirement already satisfied: flatbuffers>=24.3.25 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (25.2.10)\nRequirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.6.0)\nRequirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.2.0)\nRequirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (18.1.1)\nRequirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.4.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from tensorflow) (25.0)\nRequirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev,>=3.20.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.20.3)\nRequirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (2.32.4)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from tensorflow) (75.2.0)\nRequirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.17.0)\nRequirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.1.0)\nRequirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (4.14.0)\nRequirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.17.2)\nRequirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.73.1)\nRequirement already satisfied: tensorboard<2.19,>=2.18 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (2.18.0)\nRequirement already satisfied: keras>=3.5.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.8.0)\nRequirement already satisfied: numpy<2.1.0,>=1.26.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (1.26.4)\nRequirement already satisfied: h5py>=3.11.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (3.14.0)\nRequirement already satisfied: ml-dtypes<0.5.0,>=0.4.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.4.1)\nRequirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow) (0.37.1)\nRequirement already satisfied: chardet in /usr/local/lib/python3.11/dist-packages (from music21) (5.2.0)\nRequirement already satisfied: joblib in /usr/local/lib/python3.11/dist-packages (from music21) (1.5.1)\nRequirement already satisfied: jsonpickle in /usr/local/lib/python3.11/dist-packages (from music21) (4.1.1)\nRequirement already satisfied: matplotlib in /usr/local/lib/python3.11/dist-packages (from music21) (3.7.2)\nRequirement already satisfied: more-itertools in /usr/local/lib/python3.11/dist-packages (from music21) (10.7.0)\nRequirement already satisfied: webcolors>=1.5 in /usr/local/lib/python3.11/dist-packages (from music21) (24.11.1)\nRequirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from astunparse>=1.6.0->tensorflow) (0.45.1)\nRequirement already satisfied: rich in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (14.0.0)\nRequirement already satisfied: namex in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (0.1.0)\nRequirement already satisfied: optree in /usr/local/lib/python3.11/dist-packages (from keras>=3.5.0->tensorflow) (0.16.0)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy<2.1.0,>=1.26.0->tensorflow) (2.4.1)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorflow) (2025.6.15)\nRequirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (3.8.2)\nRequirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (0.7.2)\nRequirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.19,>=2.18->tensorflow) (3.1.3)\nRequirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (1.3.2)\nRequirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (4.58.4)\nRequirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (1.4.8)\nRequirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (11.2.1)\nRequirement already satisfied: pyparsing<3.1,>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (3.0.9)\nRequirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib->music21) (2.9.0.post0)\nRequirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from werkzeug>=1.0.1->tensorboard<2.19,>=2.18->tensorflow) (3.0.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.1.0,>=1.26.0->tensorflow) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.1.0,>=1.26.0->tensorflow) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy<2.1.0,>=1.26.0->tensorflow) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy<2.1.0,>=1.26.0->tensorflow) (2024.2.0)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras>=3.5.0->tensorflow) (3.0.0)\nRequirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich->keras>=3.5.0->tensorflow) (2.19.2)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy<2.1.0,>=1.26.0->tensorflow) (2024.2.0)\nRequirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow) (0.1.2)\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"## Libraries","metadata":{}},{"cell_type":"code","source":"# For data handling and visualizations\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sn\nimport warnings\n\n# For data pre-processing\nimport os\nimport glob\nfrom music21 import converter, instrument, note, chord\n\n# For neural network building\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import LSTM, Dense, Dropout, Conv1D, MaxPooling1D, Flatten\nfrom tensorflow.keras.utils import to_categorical\nfrom sklearn.model_selection import train_test_split\nimport pickle","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:02:58.373097Z","iopub.execute_input":"2025-07-19T18:02:58.373349Z","iopub.status.idle":"2025-07-19T18:03:14.506641Z","shell.execute_reply.started":"2025-07-19T18:02:58.373327Z","shell.execute_reply":"2025-07-19T18:03:14.505869Z"}},"outputs":[{"name":"stderr","text":"2025-07-19 18:03:02.200250: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1752948182.385327      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1752948182.438968      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}],"execution_count":2},{"cell_type":"markdown","source":"## Configuration","metadata":{}},{"cell_type":"code","source":"warnings.filterwarnings('ignore')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.507350Z","iopub.execute_input":"2025-07-19T18:03:14.507930Z","iopub.status.idle":"2025-07-19T18:03:14.511656Z","shell.execute_reply.started":"2025-07-19T18:03:14.507910Z","shell.execute_reply":"2025-07-19T18:03:14.510880Z"}},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"## Dataset","metadata":{}},{"cell_type":"markdown","source":"#### Function to parse MIDI files and extract notes, chords and rests.","metadata":{}},{"cell_type":"code","source":"def get_notes_from_midi(file_path):\n    notes = []\n    try:\n        midi = converter.parse(file_path)\n        notes_to_parse = None\n\n        # Assuming the music could be in different parts (instruments)\n        parts = instrument.partitionByInstrument(midi)\n        if parts:\n            notes_to_parse = parts.parts[0].recurse()\n        else:\n            notes_to_parse = midi.flat.notes\n\n        for element in notes_to_parse:\n            if isinstance(element, note.Note):\n                notes.append(str(element.pitch))\n            elif isinstance(element, chord.Chord):\n                notes.append('.'.join(str(n) for n in element.normalOrder))\n            elif isinstance(element, note.Rest):\n                notes.append('rest')\n    except Exception as e:\n        print(f\"Error parsing {file_path}: {e}\")\n    return notes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.513367Z","iopub.execute_input":"2025-07-19T18:03:14.514020Z","iopub.status.idle":"2025-07-19T18:03:14.535458Z","shell.execute_reply.started":"2025-07-19T18:03:14.514001Z","shell.execute_reply":"2025-07-19T18:03:14.534937Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"#### Loads all MIDI files from the specified directory structure","metadata":{}},{"cell_type":"code","source":"def load_midi_files(path):\n    composers = {}\n    for composer_dir in os.listdir(path):\n        composer_path = os.path.join(path, composer_dir)\n        if os.path.isdir(composer_path):\n            print(f\"Loading files for {composer_dir}...\")\n            all_notes = []\n            # Using glob to find all .mid and .midi files\n            for file in glob.glob(os.path.join(composer_path, '*.mid*')):\n                notes = get_notes_from_midi(file)\n                if notes:\n                    all_notes.extend(notes)\n            composers[composer_dir] = all_notes\n    return composers","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.536214Z","iopub.execute_input":"2025-07-19T18:03:14.536478Z","iopub.status.idle":"2025-07-19T18:03:14.553209Z","shell.execute_reply.started":"2025-07-19T18:03:14.536457Z","shell.execute_reply":"2025-07-19T18:03:14.552543Z"}},"outputs":[],"execution_count":5},{"cell_type":"markdown","source":"## Data Preparation","metadata":{}},{"cell_type":"markdown","source":"#### Creates input sequences and corresponding outputs for the network.","metadata":{}},{"cell_type":"code","source":"def prepare_sequences(all_notes, note_to_int, sequence_length=100):\n    network_input = []\n    network_output = []\n\n    # For creating sequences of notes\n    for i in range(0, len(all_notes) - sequence_length, 1):\n        sequence_in = all_notes[i:i + sequence_length]\n        sequence_out = all_notes[i + sequence_length]\n        network_input.append([note_to_int[char] for char in sequence_in])\n        network_output.append(note_to_int[sequence_out])\n\n    # Reshaping input for the LSTM layers\n    n_patterns = len(network_input)\n    network_input = np.reshape(network_input, (n_patterns, sequence_length, 1))\n    \n    # Normalization of input\n    network_input = network_input / float(len(note_to_int))\n\n    return network_input, network_output","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.553962Z","iopub.execute_input":"2025-07-19T18:03:14.554648Z","iopub.status.idle":"2025-07-19T18:03:14.572777Z","shell.execute_reply.started":"2025-07-19T18:03:14.554625Z","shell.execute_reply":"2025-07-19T18:03:14.572262Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"base_path='/kaggle/input/composer-dataset/Composer_Dataset/NN_midi_files_extended'\ntrain_path = os.path.join(base_path, 'train')\ndev_path = os.path.join(base_path, 'dev')\ntest_path = os.path.join(base_path, 'test')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.573399Z","iopub.execute_input":"2025-07-19T18:03:14.573593Z","iopub.status.idle":"2025-07-19T18:03:14.587632Z","shell.execute_reply.started":"2025-07-19T18:03:14.573578Z","shell.execute_reply":"2025-07-19T18:03:14.587085Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"train_composers_notes = load_midi_files(train_path)\ndev_composers_notes = load_midi_files(dev_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-19T18:03:14.588398Z","iopub.execute_input":"2025-07-19T18:03:14.588730Z","iopub.status.idle":"2025-07-19T18:38:33.769603Z","shell.execute_reply.started":"2025-07-19T18:03:14.588711Z","shell.execute_reply":"2025-07-19T18:38:33.769007Z"}},"outputs":[{"name":"stdout","text":"Loading files for hummel...\nLoading files for bartok...\nLoading files for handel...\nLoading files for byrd...\nLoading files for bach...\nLoading files for mozart...\nLoading files for schumann...\nLoading files for mendelssohn...\nLoading files for chopin...\nLoading files for hummel...\nLoading files for bartok...\nLoading files for handel...\nLoading files for byrd...\nLoading files for bach...\nLoading files for mozart...\nLoading files for schumann...\nLoading files for mendelssohn...\nLoading files for chopin...\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"all_notes = []\ncomposer_labels = []\n\n","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}